---
- name: Install qrencode
  package:
    name:
      - qrencode
    state: present
    
- name: ensure directory exist
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /opt/v2ray
    - /etc/v2ray

- name: Get latest release of v2ray
  github_release:
    user: v2fly
    repo: v2ray-core
    action: latest_release
  register: v2ray_latest

- name: get v2ray binary package
  unarchive:
    src: "https://github.com/v2fly/v2ray-core/releases/download/{{ v2ray_latest.tag }}/v2ray-linux-{{ app_arch }}.zip"
    dest: /opt/v2ray
    remote_src: yes

- name: symlink binary files
  file:
    src: "/opt/v2ray/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
  loop:
    - v2ray
    - v2ctl

- name: get uuid
  command: v2ctl uuid
  register: uuid
  changed_when: "uuid.rc != 0"

- name: generate v2ray config
  template:
    src: config.json.j2
    dest: /etc/v2ray/config.json
  notify:
    - restart v2ray

- name: copy systemd config
  copy:
    src: v2ray.service
    dest: /etc/systemd/system/v2ray.service

- name: enable v2ray service
  systemd:
    name: v2ray
    state: started
    daemon_reload: yes
    enabled: yes
    
- name: Touch v2ray json
  file:
    path: /usr/local/v2ray_qr.json
    state: touch
    mode: u=rw,g=r,o=r
    
- name: Write v2ray json
  shell: |
    echo '{
  "v": "2",
  "ps": "{{ domain_name }}",
  "add": "{{ domain_name }}",
  "port": "443",
  "id": "{{ uuid.stdout }}",
  "aid": "66",
  "net": "ws",
  "type": "none",
  "host": "{{ domain_name }}",
  "path": "/c58640f/",
  "tls": "tls"
}' > /usr/local/v2ray_qr.json

- name: Touch v2ray json
  file:
    path: ~/v2ray.info
    state: touch
    mode: u=rw,g=r,o=r
    
- name: write v2ray info
  shell: cat /usr/local/v2ray_qr.json > ~/v2ray.info

- name: write link to v2ray info 
  shell: |
    vmess_link="vmess://$(base64 -w 0 /usr/share/v2ray_qr.json)"
    {
      echo -n "${vmess_link}" | qrencode -o - -t utf8
      echo -e "vmess link: ${vmess_link}"
    } >> ~/v2ray.info

