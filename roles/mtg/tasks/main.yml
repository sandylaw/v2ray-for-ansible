---
- name: Install python3 python3-pip
  package:
    name:
      - python3
      - python3-pip
    state: present

- name: Install require module
  pip:
    name:
      - github3.py
    executable: pip3
    state: present
  
- name: Create mtg user
  user:
    name: "{{ mtg_user }}"
    shell: /bin/false
    create_home: yes
    home: /opt/mtg
    system: yes

- name: Create mtg directories
  file:
    path: "{{ item }}"
    owner: "{{ mtg_user }}"
    group: "{{ mtg_user }}"
    state: directory
  loop:
    - /opt/mtg
    - /etc/mtg

- name: Get latest release of mtg
  github_release:
    user: 9seconds
    repo: mtg
    action: latest_release
  register: mtg_latest

- name: Download binary
  get_url:
    url: "https://github.com/9seconds/mtg/releases/download/{{ mtg_latest.tag }}/mtg-linux-{{ mtg_architecture | default('amd64') }}"
    dest: /opt/mtg/mtg-linux-amd64
    owner: "{{ mtg_user }}"
    group: "{{ mtg_user }}"
    mode: 0740
  notify: restart mtg

- name: Allow mtg to bind to reserved ports
  capabilities:
    path: /opt/mtg/mtg-linux-amd64
    capability: cap_net_bind_service=+ep
    state: present
  when: mtg_cap_net_bind_service
  notify: restart mtg

- name: Generate mtg_secret
  shell: mtg generate-secret -c bing.com tls
  register: mtg_secret

- name: Generate config
  template:
    src: mtg.j2
    owner: "{{ mtg_user }}"
    group: "{{ mtg_user }}"
    mode: '0640'
    dest: /etc/mtg/config
    force: yes
  notify: restart mtg

- name: Upload systemd unit file
  template:
    src: mtg.service.j2
    dest: /etc/systemd/system/mtg.service
    mode: '0640'
    force: yes
  notify:
    - systemd daemon-reload
    - restart mtg

- name: Enable service
  systemd:
    name: mtg
    state: started
    enabled: yes
